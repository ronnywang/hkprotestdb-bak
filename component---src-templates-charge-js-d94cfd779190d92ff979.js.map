{"version":3,"sources":["webpack:///./src/components/LabelText.js","webpack:///./src/templates/Charge.js"],"names":["LabelTextWrapper","styled","div","theme","spacing","ShortLabelTextWrapper","palette","primary","contrastText","breakpoints","up","LabelText","label","text","props","className","ShortLabelText","ChargeTemplate","pageContext","localePath","allCharges","charge","data","cms","useTranslation","i18n","t","classes","useBasicStyle","thisCharge","chargeIndex","findIndex","c","id","otherCharges","slice","useState","selectedLegendId","setSelectedLegendId","defendants","setDefendants","isLoading","setIsLoading","useEffect","a","fetch","window","location","origin","then","responses","json","fetchData","selectedDefendants","filter","d","includes","progress","sort","b","title","withLanguage","description","count","length","dangerouslySetInnerHTML","__html","marked","legendWrapper","filterable","type","activeId","handleClick","clickedIndex","items","trackCustomEvent","event_category","event_label","context","fullWidthSecondary","padding","map","name","to","page","lang","language","obj","countText","defendantCount","query"],"mappings":"iNAGMA,EAAmBC,IAAOC,IAAV,8EAAGD,CAAH,SAClB,4CAAGE,MACoBC,QAAQ,GAD/B,yNAcEC,EAAwBJ,IAAOC,IAAV,mFAAGD,CAAH,SACvB,gBAAGE,EAAH,EAAGA,MAAH,8EAGiBA,EAAMC,QAAQ,GAH/B,wHAQkBD,EAAMG,QAAQC,QAAQC,aARxC,qCASmBL,EAAMC,QAAQ,GATjC,4BAUkBD,EAAMC,QAAQ,GAVhC,sCAYID,EAAMM,YAAYC,GAAG,aAZzB,qDAmBW,SAASC,EAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAASC,EAAS,gCAC3D,OACE,kBAACd,EAAqBc,EACnBF,GAAS,yBAAKG,UAAU,SAASH,GAClC,yBAAKG,UAAU,QAAQF,IAKtB,SAASG,EAAT,GAAoD,IAA1BJ,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAASC,EAAS,gCACxD,OACE,kBAACT,EAA0BS,EACxBF,GAAS,yBAAKG,UAAU,SAASH,GAClC,yBAAKG,UAAU,QAAQF,M,0WCmGdI,UAnIQ,SAAC,GAKjB,IAAD,IAJJC,YAAeC,EAIX,EAJWA,WAAYC,EAIvB,EAJuBA,WAElBC,EAEL,EAHJC,KACEC,IAAOF,OAEL,EACgBG,cAAZC,EADJ,EACIA,KAAMC,EADV,EACUA,EACRC,EAAUC,cACTC,EAAcR,EAHjB,GAIES,EAAcV,EAAWW,WAAU,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAWI,MAC5DC,EAAY,sBACbd,EAAWe,MAAML,EAAc,IADlB,YAEbV,EAAWe,MAAM,EAAGL,KAPrB,EAU4CM,oBAAU,GAAnDC,EAVH,KAUqBC,EAVrB,OAYgCF,mBAAS,IAAtCG,EAZH,KAYeC,EAZf,OAa8BJ,oBAAS,GAApCK,EAbH,KAacC,EAbd,KAeJC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACCC,MACZC,OAAOC,SAASC,OADC,iBACsBnB,EAAWI,GADjC,SAEpBgB,MAAK,SAAAC,GAAS,OAAIA,EAAUC,UAHd,OACZ7B,EADY,OAKhBkB,EAAclB,EAAKiB,YACnBG,GAAa,GANG,2CAAH,qDASfU,KACC,IAEH,IAAMC,EAAqBd,EACxBe,QACC,SAAAC,GAAC,OAAyB,GAArBlB,GAA0B,CAACA,GAAkBmB,SAASD,EAAEE,SAASxB,OAEvEyB,MAAK,SAACd,EAAGe,GAAJ,OAAUf,EAAEa,SAASxB,GAAK0B,EAAEF,SAASxB,MAE7C,OACE,6BACE,kBAAC,IAAD,CAAQd,WAAYA,GAClB,kBAAC,IAAD,CACEyC,MAAOC,YAAapC,EAAMI,EAAY,QACtCiC,YAAaD,YAAapC,EAAMI,EAAY,aAE9C,6BACE,kBAAC,IAAD,KACE,yBAAKd,UAAU,UACb,yBAAKA,UAAU,gBACZ8C,YAAapC,EAAMI,EAAY,SAElC,yBAAKd,UAAU,0BACZW,EAAE,yBAA0B,CAAEqC,MAAOxB,EAAWyB,YAIvD,kBAAC,IAAD,KACE,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEpD,MAAOiD,YAAapC,EAAMI,EAAY,aACtChB,KACE,yBACEoD,wBAAyB,CACvBC,OAAQC,IAAON,YAAapC,EAAMI,EAAY,iBAKtD,kBAAC,IAAD,CACEjB,MAAOc,EAAE,sBACTb,KAAMgD,YAAapC,EAAMI,EAAY,kBAGzC,yBAAKd,UAAWY,EAAQyC,eACtB,kBAAC,IAAD,CACEC,YAAY,EACZC,KAAK,SACLC,SAAUlC,EACVmC,YAAa,SAACC,EAAcC,GAC1BpC,EACEoC,EAAMD,GAAcxC,IAAMI,GACrB,EACDqC,EAAMD,GAAcxC,IAE1B0C,YAAiB,QAAS,CACxBC,eAAgB,SAChBC,YAAgBhB,YAAapC,EAAMI,EAAY,QAApC,MACT6C,EAAMD,GAAcb,YAM9B,kBAAC,IAAD,KACGnB,EACC,kBAAC,IAAD,MAEA,kBAAC,IAAD,CACEY,mBAAoBA,EACpByB,QAAQ,cAId,yBAAK/D,UAAWY,EAAQoD,oBACtB,kBAAC,IAAD,CAAiBC,QAAS,GACxB,kBAAC,IAAD,CACEN,MAAOxC,EAAa+C,KAAI,SAAA5D,GAAM,MAAK,CACjCY,GAAIZ,EAAOY,GACXiD,KAAMrB,YAAapC,EAAMJ,EAAQ,QACjC8D,GAAI,CACFC,KAAM,kBACNC,KAAM5D,EAAK6D,SACXC,IAAKlE,GAEPmE,UAAW9D,EAAE,yBAA0B,CACrCqC,MAAO1C,EAAOoE,yBAMxB,kBAAC,IAAD,UASH,IAAMC,EAAK","file":"component---src-templates-charge-js-d94cfd779190d92ff979.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst LabelTextWrapper = styled.div`\n  ${({ theme }) => `\n    margin-bottom: ${theme.spacing(2)}px;\n\n    .label {\n      width: 100%;\n      flex-shrink: 0;\n      font-family: \"Noto Serif TC\", serif;\n      font-weight: 900;\n      line-height: 1.5rem;\n      border-bottom: #555555 1px solid;\n    }\n  `}\n`\n\nconst ShortLabelTextWrapper = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    align-items: baseline;\n    margin-bottom: ${theme.spacing(1)}px;\n    \n    .label {\n      font-family: \"Noto Serif TC\", serif;\n      font-size: 0.875rem;\n      border-right: ${theme.palette.primary.contrastText} 1px solid;\n      padding-right: ${theme.spacing(1)}px;\n      margin-right: ${theme.spacing(1)}px;\n      max-width: 40vw;\n      ${theme.breakpoints.up(\"viewport7\")} {\n        flex-shrink: 0;\n      }\n    }\n  `}\n`\n\nexport default function LabelText({ label, text, ...props }) {\n  return (\n    <LabelTextWrapper {...props}>\n      {label && <div className=\"label\">{label}</div>}\n      <div className=\"text\">{text}</div>\n    </LabelTextWrapper>\n  )\n}\n\nexport function ShortLabelText({ label, text, ...props }) {\n  return (\n    <ShortLabelTextWrapper {...props}>\n      {label && <div className=\"label\">{label}</div>}\n      <div className=\"text\">{text}</div>\n    </ShortLabelTextWrapper>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport SEO from \"@/components/SEO\"\nimport { withLanguage } from \"@/utils/i18n\"\nimport Layout from \"@/components/Layout\"\nimport { graphql } from \"gatsby\"\nimport LabelText, { ShortLabelText } from \"@/components/LabelText\"\nimport CentreContainer from \"@/components/Container\"\nimport FullWidthImage from \"@/components/Swiper/FullWidthImage\"\nimport RelatedCard from \"@/components/Swiper/RelatedCard\"\nimport { useBasicStyle } from \"@/theme\"\nimport { StickyCard } from \"@/components/StickyCard\"\nimport Legend from \"@/components/Legend\"\nimport marked from \"marked\"\nimport Back from \"@/components/Back\"\nimport DefendantDots from \"@/DefendantDots\"\nimport Loader from \"@/components/Loader\"\nimport { trackCustomEvent } from \"@/utils/ga\"\n\nconst ChargeTemplate = ({\n  pageContext: { localePath, allCharges },\n  data: {\n    cms: { charge },\n  },\n}) => {\n  const { i18n, t } = useTranslation()\n  const classes = useBasicStyle()\n  const [thisCharge] = charge\n  const chargeIndex = allCharges.findIndex(c => c.id === thisCharge.id)\n  const otherCharges = [\n    ...allCharges.slice(chargeIndex + 1),\n    ...allCharges.slice(0, chargeIndex),\n  ]\n\n  const [selectedLegendId, setSelectedLegendId] = useState(-1)\n\n  const [defendants, setDefendants] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let data = await fetch(\n        `${window.location.origin}/data/charges/${thisCharge.id}.json`\n      ).then(responses => responses.json())\n\n      setDefendants(data.defendants)\n      setIsLoading(false)\n    }\n\n    fetchData()\n  }, [])\n\n  const selectedDefendants = defendants\n    .filter(\n      d => selectedLegendId == -1 || [selectedLegendId].includes(d.progress.id)\n    )\n    .sort((a, b) => a.progress.id - b.progress.id)\n\n  return (\n    <div>\n      <Layout localePath={localePath}>\n        <SEO\n          title={withLanguage(i18n, thisCharge, \"name\")}\n          description={withLanguage(i18n, thisCharge, \"content\")}\n        />\n        <div>\n          <FullWidthImage>\n            <div className=\"header\">\n              <div className=\"header__Name\">\n                {withLanguage(i18n, thisCharge, \"name\")}\n              </div>\n              <div className=\"header__DefendantCount\">\n                {t(\"common.defendant_count\", { count: defendants.length })}\n              </div>\n            </div>\n          </FullWidthImage>\n          <CentreContainer>\n            <Back />\n          </CentreContainer>\n          <CentreContainer>\n            <LabelText\n              label={withLanguage(i18n, thisCharge, \"ordinance\")}\n              text={\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: marked(withLanguage(i18n, thisCharge, \"content\")),\n                  }}\n                />\n              }\n            />\n            <ShortLabelText\n              label={t(\"charge.max_penalty\")}\n              text={withLanguage(i18n, thisCharge, \"max_penalty\")}\n            />\n          </CentreContainer>\n          <div className={classes.legendWrapper}>\n            <Legend\n              filterable={true}\n              type=\"charge\"\n              activeId={selectedLegendId}\n              handleClick={(clickedIndex, items) => {\n                setSelectedLegendId(\n                  items[clickedIndex].id == selectedLegendId\n                    ? -1\n                    : items[clickedIndex].id\n                )\n                trackCustomEvent(\"Click\", {\n                  event_category: \"Legend\",\n                  event_label: `${withLanguage(i18n, thisCharge, \"name\")} - ${\n                    items[clickedIndex].title\n                  }`,\n                })\n              }}\n            />\n          </div>\n          <CentreContainer>\n            {isLoading ? (\n              <Loader />\n            ) : (\n              <DefendantDots\n                selectedDefendants={selectedDefendants}\n                context=\"progress\"\n              />\n            )}\n          </CentreContainer>\n          <div className={classes.fullWidthSecondary}>\n            <CentreContainer padding={0}>\n              <RelatedCard\n                items={otherCharges.map(charge => ({\n                  id: charge.id,\n                  name: withLanguage(i18n, charge, \"name\"),\n                  to: {\n                    page: \"template-charge\",\n                    lang: i18n.language,\n                    obj: charge,\n                  },\n                  countText: t(\"common.defendant_count\", {\n                    count: charge.defendantCount,\n                  }),\n                }))}\n              />\n            </CentreContainer>\n          </div>\n          <StickyCard />\n        </div>\n      </Layout>\n    </div>\n  )\n}\n\nexport default ChargeTemplate\n\nexport const query = graphql`\n  query ChargeQuery($chargeId: Int!) {\n    cms {\n      charge: charges(where: { id: { _eq: $chargeId } }) {\n        ...ChargeBasicInfo\n        ordinance_zh\n        ordinance_en\n        max_penalty_zh\n        max_penalty_en\n      }\n    }\n  }\n`\n"],"sourceRoot":""}